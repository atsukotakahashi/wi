name:           yi
version:        0.6.2.5
category:       Development, Editor
synopsis:       The Haskell-Scriptable Editor
description:
  Yi is a text editor written in Haskell and extensible in Haskell. The goal of the Yi project is
  to provide a flexible, powerful, and correct editor for haskell hacking.
license:        GPL
license-file:   LICENSE
author:         AUTHORS
maintainer:     yi-devel@googlegroups.com
homepage:       http://haskell.org/haskellwiki/Yi
bug-reports:    http://code.google.com/p/yi-editor/issues/list
Cabal-Version:  >= 1.6
tested-with:    GHC==7.0.2
build-type:     Simple
data-files:
  art/yi+lambda-fat.pdf
  art/yi+lambda-fat.32.png
  art/dependencies.png
  art/plain-folder.png
  art/hs-source-folder.png
  art/exposed-module.png
  art/hidden-module.png
  art/exposed-file-module.png
  art/hidden-file-module.png
  art/package.png
  art/project.png
  art/c-source.png
  art/h-source.png
  art/text-file.png
  art/license-file.png
  art/setup-script.png
  art/setup-script.png
extra-source-files: src/Yi/Lexer/common.hsinc

-- Frontends
flag cocoa
  Default: False
  Description: "Build with Cocoa frontend"

flag pango
  Default: False
  Description: "Build with Pango frontend"

flag vte
  Default: False
  Description: "Build with Vte frontend"

flag vty
  Default: False
  Description: "Build with Vty frontend"

flag scion
  Default: False
  Description: Use the scion library to provide extra commands that interface with GHC (experimental)

flag ghcAPI
  Description: Enable linking with GHC API for advanced features.
  Default: False
  -- Can be useful to disable; ghc package is difficult to rebuild;
  --  * normally not available for profiling.
  --  * links against old/new version of bytestring
  --  * links against old version of Cabal
  -- ...

flag hacking
  Default: False
  Description:
     Hacking mode:
        * Create HackerMain.hs by copying your ~/.yi/yi.hs
        * Skip library compilation
        * You can run yi in-place with dist/build/yi/yi

flag testing
  Description: bake-in the self-checks

library
  hs-source-dirs: src

  if flag(hacking)
    buildable: False

  exposed-modules:
    Yi
    Yi.Boot
    Yi.Buffer
    Yi.Buffer.Basic
    Yi.Buffer.HighLevel
    Yi.Buffer.Indent
    Yi.Buffer.Normal
    Yi.Buffer.Misc
    Yi.Buffer.Region
    Yi.Buffer.Undo
    Yi.Command
    Yi.Completion
    Yi.Config
    Yi.Config.Default
    Yi.Config.Misc
    Yi.Core
    Yi.Debug
    Yi.Dired
    Yi.Dynamic
    Yi.Editor
    Yi.Eval
    Yi.Event
    Yi.File
    Yi.History
    Yi.Hoogle
    Yi.IReader
    Yi.IncrementalParse
    Yi.Interact
    Yi.Keymap
    Yi.Keymap.Completion
    Yi.Keymap.Cua
    Yi.Keymap.Emacs
    Yi.Keymap.Emacs.KillRing
    Yi.Keymap.Emacs.Utils
    Yi.Keymap.Keys
    Yi.Keymap.Vim
    Yi.KillRing
    Yi.Lexer.Abella
    Yi.Lexer.Alex
    Yi.Lexer.Cabal
    Yi.Lexer.Compilation
    Yi.Lexer.C
    Yi.Lexer.ObjectiveC
    Yi.Lexer.Cplusplus
    Yi.Lexer.Haskell
    Yi.Lexer.JavaScript
    Yi.Lexer.Latex
    Yi.Lexer.LiterateHaskell
    Yi.Lexer.GNUMake
    Yi.Lexer.OCaml
    Yi.Lexer.Ott
    Yi.Lexer.Perl
    Yi.Lexer.Python
    Yi.Lexer.Srmc
    Yi.Lexer.SVNCommit
    Yi.Lexer.Whitespace
    Yi.Main
    Yi.MiniBuffer
    Yi.Misc
    Yi.Mode.Abella
    Yi.Mode.Buffers
    Yi.Mode.Compilation
    Yi.Mode.Haskell
    Yi.Mode.Haskell.Dollarify
    Yi.Mode.IReader
    Yi.Mode.Interactive
    Yi.Mode.JavaScript
    Yi.Mode.Latex
    Yi.Modes
    Yi.Monad
    Yi.Prelude
    Yi.Process
    Yi.Rectangle
    Yi.Regex
    Yi.Region
    Yi.Snippets
    Yi.Snippets.Haskell
    Yi.Search
    Yi.String
    Yi.Style
    Yi.Style.Library
    Yi.Syntax
    Yi.Syntax.Driver
    Yi.Syntax.Haskell
    Yi.Syntax.JavaScript
    Yi.Syntax.Latex
    Yi.Syntax.Layout
    Yi.Syntax.OnlineTree
    Yi.Syntax.Paren
    Yi.Syntax.Tree
    Yi.Syntax.Strokes.Haskell
    Yi.Tag
    Yi.TextCompletion,
    Yi.UI.Common
    Yi.UI.Batch
    Yi.UI.Utils
    Yi.UI.TabBar
    Yi.Verifier.JavaScript
    Yi.Window
    Yi.Char.Unicode

    -- This is super bad. This shouldn't be exposed (and we should just
    -- depend on a premade ropes library). Needed in yi-pango.
    Data.Rope
    Data.Prototype

  include-dirs:   src/Yi/Lexer

  -- Frontends
  if flag(cocoa)
    build-depends: yi-cocoa
    cpp-options: -DFRONTEND_COCOA

  if flag(pango)
    build-depends: yi-pango
    cpp-options: -DFRONTEND_PANGO

  if flag(vte)
    build-depends: yi-pango
    cpp-options: -DFRONTEND_VTE

  if flag(vty)
    build-depends: yi-vty
    cpp-options: -DFRONTEND_VTY

  if flag (scion)
    cpp-options: -DSCION
    exposed-modules:  Yi.Scion

  if flag (ghcAPI)
    cpp-options: -DGHC_API

    exposed-modules:  Yi.Mode.Shim
    other-modules:
      Shim.SHM, Shim.SessionMonad, Shim.Hsinfo, Shim.GhcCompat,
      Shim.ExprSearch, Yi.GHC

  if !os(windows)
    cpp-options: -DCAUTIOUS_WRITES

  other-modules:
    Paths_yi,

    -- "Internal" modules that the user better not see.
    Yi.Buffer.Implementation

    -- Should probably be split out to another package.
    Data.DelayList
    Data.Trie
    Parser.Incremental
    Shim.CabalInfo
    Shim.Utils
    Shim.ProjectContent
    System.FriendlyPath

    -- Broken.
--            Yi.Keymap.Ee,
--            Yi.Keymap.Gwern,
--            Yi.Keymap.Joe,
--            Yi.Keymap.Mg,
--            Yi.Keymap.Nano,
--            Yi.Keymap.Vi,

executable parserTest
  hs-source-dirs: src

  if !flag(testing)
    buildable: False
  else
    main-is: ParserTest/ParserTest.hs
    other-modules:
      Yi
      Yi.Modes
      Yi.Mode.Abella
      Yi.Mode.Compilation
      Yi.Mode.Haskell
      Yi.Mode.Haskell.Dollarify
      Yi.UI.Common

      Paths_yi
      Yi.GHC

      Yi.Lexer.Abella
      Yi.Lexer.Alex
      Yi.Lexer.Compilation
      Yi.Lexer.C
      Yi.Lexer.ObjectiveC
      Yi.Lexer.Cplusplus
      Yi.Lexer.Haskell
      Yi.Lexer.JavaScript
      Yi.Lexer.LiterateHaskell
      Yi.Lexer.Latex
      Yi.Lexer.Srmc
      Yi.Lexer.Cabal
      Yi.Lexer.GNUMake
      Yi.Lexer.OCaml
      Yi.Lexer.Ott
      Yi.Lexer.Perl
      Yi.Lexer.Python
      Yi.Lexer.SVNCommit
      Yi.Lexer.Whitespace

      Yi.Syntax
      Yi.Syntax.Driver
      Yi.Syntax.JavaScript
      Yi.Syntax.Layout
      Yi.Syntax.OnlineTree
      Yi.Syntax.Paren
      Yi.Syntax.Latex
      Yi.Syntax.Tree

      Yi.Mode.Interactive
    include-dirs:   src/Yi/Lexer

executable yi
  hs-source-dirs: src

  if flag(hacking)
    main-is: HackerMain.hs
  else
    main-is: Main.hs

  build-tools:   alex >= 2.0.1 && < 3

  build-depends:
    Cabal >= 1.6 && < 1.11,
    Diff >=0.1 && <0.2,
    array, containers,  directory, process, old-locale,
    base >=4 && <5,
    binary == 0.5.*,
    bytestring >=0.9.1 && <0.9.2,
    derive >=2.4 && <2.5,
    data-accessor >= 0.2.1.4 && < 0.3,
    data-accessor-monads-fd == 0.2.*,
    data-accessor-template >= 0.2.1.3 && < 0.2.2,
    dlist >=0.4.1,
    dyre >=0.7,
    filepath>=1.1 && <1.3,
    fingertree >= 0 && <0.1,
    ghc-paths ==0.1.*,
    hint > 0.3.1,
    monads-fd >= 0.1.0.1,
    pointedlist >= 0.3.5 && <0.4,
    pureMD5 >= 0.2.3,
    random,
    regex-base ==0.93.*,
    regex-tdfa == 1.1.*,
    rosezipper >= 0.1 && < 0.2,
    split == 0.1.*,
    template-haskell >= 2.4 && < 2.6,
    time >= 1.1 && < 1.3,
    utf8-string >= 0.3.1,
    uniplate,
    unix-compat >=0.1 && <0.3

  ghc-options:   -Wall -fno-warn-orphans -threaded
  -- orphans are a performance warning, but
  -- we need this in Yi.
  -- ghc-options later on get appended to the original
  ghc-prof-options:   -prof -auto-all

  if !os(mingw32)
    build-depends: unix

  -- Frontends
  if flag(cocoa)
    build-depends: yi-cocoa
    cpp-options: -DFRONTEND_COCOA

  if flag(pango)
    build-depends: yi-pango
    cpp-options: -DFRONTEND_PANGO

  if flag(vte)
    build-depends: yi-pango
    cpp-options: -DFRONTEND_VTE

  if flag(vty)
    build-depends: yi-vty
    cpp-options: -DFRONTEND_VTY

  if flag (scion)
    build-depends: ghc == 6.10.*
    build-depends: ghc-syb
    build-depends: scion
    cpp-options: -DSCION

  if flag (ghcAPI)
    build-depends: ghc == 6.8.3 || == 6.10.*
    build-depends: old-time
    -- Shim uses old-time
    cpp-options: -DGHC_API

  if !os(windows)
    build-depends: cautious-file >= 0.1.5 && <0.2
    cpp-options: -DCAUTIOUS_WRITES

  other-modules:
    Yi
    Yi.Prelude
    Yi.Boot
    Yi.Keymap.Emacs
    Yi.Keymap.Vim
    Yi.Misc
    Yi.Modes
    Yi.Mode.Abella
    Yi.Mode.Compilation
    Yi.Mode.Haskell
    Yi.Mode.Haskell.Dollarify
    Yi.Buffer
    Yi.Buffer.Basic
    Yi.Keymap.Keys
    Shim.CabalInfo
    Shim.Utils
    Shim.ProjectContent
    System.FriendlyPath
    Yi.UI.Common
    Yi.UI.Batch

    Paths_yi
    Yi.GHC

    Yi.Lexer.Abella
    Yi.Lexer.Alex
    Yi.Lexer.Compilation
    Yi.Lexer.C
    Yi.Lexer.ObjectiveC
    Yi.Lexer.Cplusplus
    Yi.Lexer.Haskell
    Yi.Lexer.JavaScript
    Yi.Lexer.LiterateHaskell
    Yi.Lexer.Latex
    Yi.Lexer.Srmc
    Yi.Lexer.Cabal
    Yi.Lexer.GNUMake
    Yi.Lexer.OCaml
    Yi.Lexer.Ott
    Yi.Lexer.Perl
    Yi.Lexer.Python
    Yi.Lexer.SVNCommit
    Yi.Lexer.Whitespace

    Yi.Syntax
    Yi.Syntax.Driver
    Yi.Syntax.JavaScript
    Yi.Syntax.Layout
    Yi.Syntax.OnlineTree
    Yi.Syntax.Paren
    Yi.Syntax.Latex
    Yi.Syntax.Tree
    Yi.Syntax.Strokes.Haskell

    Yi.Verifier.JavaScript

    Yi.Mode.Interactive

    Yi.Buffer.Indent
    Yi.Buffer.HighLevel
    Yi.Buffer.Implementation
    Yi.Buffer.Normal
    Yi.Buffer.Region
    Yi.Completion
    Yi.Core
    Yi.Debug
    Yi.Dired
    Yi.Dynamic
    Yi.Editor
    Yi.Eval
    Yi.Event
    Data.Rope
    Yi.History
    Yi.Interact
    Yi.Keymap
    Yi.Keymap.Completion
    Yi.Keymap.Emacs.KillRing
    Yi.Keymap.Emacs.Utils
    Yi.Main
    Yi.Monad
    Yi.Process
    Yi.Snippets
    Yi.Snippets.Haskell
    Yi.Search
    Yi.String
    Yi.Style
    Yi.TextCompletion
    Yi.Buffer.Undo
    Yi.Window
    Yi.MiniBuffer
    Yi.File
    Yi.KillRing
    Yi.IncrementalParse
    Yi.UI.Utils
    -- Should probably be split out to another package.
    Data.DelayList

  include-dirs:   src/Yi/Lexer

  if flag(testing)
      cpp-options:    -DTESTING
      hs-source-dirs: . tests/
      other-modules: Driver, TestSuite
      build-depends: QuickCheck >= 2.1.0.2
      build-depends: random
